{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Parameters" : {
      "DBUsername" : {
        "NoEcho" : "true",
        "Description" : "Username for MySQL database access",
        "Type" : "String",
        "MinLength" : "1",
        "MaxLength" : "16",
        "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
        "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
      },
      "DBPassword" : {
        "NoEcho" : "true",
        "Description" : "Password MySQL database access",
        "Type" : "String",
        "MinLength" : "8",
        "MaxLength" : "41",
        "AllowedPattern" : "[a-zA-Z0-9]*",
        "ConstraintDescription" : "must contain only alphanumeric characters."
      }
  },
    "Resources" : {
        "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
                "Name": "Lambda Proxy",
                "Description": "Lambda proxy using quick create",
                "ProtocolType": "HTTP",
                "Target": {
                        "Fn::GetAtt":["urlFunctions", "Arn"]
                }
             }
        },
        "urlFunctions": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
			        "Fn::GetAtt": ["LambdaRole", "Arn"]
		        },
                "Code": {
                    "ZipFile": { 
                        "Fn::Join":[
                            "",[
                                "import json \n",
                        
                            "def lambda_handler(event, context):\n",
                        
                            "    return {\n",
                            "        'statusCode': 200\n",
                            "        'body': json.dumps('Hello from Lambda!')\n",
                            "    }"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.9",
                "Timeout": 25,
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },
        "CreateTable": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
			        "Fn::GetAtt": ["LambdaRole", "Arn"]
		        },
                "Code": {
                    "ZipFile": { 
                        "Fn::Join":[
                            "",[
                                "import json \n",
                        
                            "def lambda_handler(event, context):\n",
                        
                            "    return {\n",
                            "        'statusCode': 200\n",
                            "        'body': json.dumps('Hello from Lambda!')\n",
                            "    }"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.9",
                "Timeout": 25,
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },
      "LambdaRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "lambda.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AmazonRDSFullAccess", "arn:aws:iam::aws:policy/AmazonEC2FullAccess"],
            "Path": "/"
         }
      },
      "RootInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "LambdaRole"
            } ]
         }
      },
        "RDSCluster" : {
            "Type": "AWS::RDS::DBCluster",
            "Properties" : {
                "MasterUsername" : {
                    "Ref": "DBUsername"
                },
                "MasterUserPassword" : {
                    "Ref": "DBPassword"
                },
                "DBClusterIdentifier" : "database1",
		    "DatabaseName" : "database1",
                "Engine" : "aurora",
                "EngineVersion" : "5.6.10a",
                "EngineMode" : "serverless",
                "ScalingConfiguration" : {
                    "AutoPause" : true,
                    "MinCapacity" : 1,
                    "MaxCapacity" : 32,
                    "SecondsUntilAutoPause" : 1000
                }
            }
        },
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "PublicRead",
                "MetricsConfigurations": [
                    {
                        "Id": "EntireBucket"
                    }
                ],
                "WebsiteConfiguration": {
                    "IndexDocument": "index.html",
                    "ErrorDocument": "error.html",
                    "RoutingRules": [
                        {
                            "RoutingRuleCondition": {
                                "HttpErrorCodeReturnedEquals": "404",
                                "KeyPrefixEquals": "out1/"
                            },
                            "RedirectRule": {
                                "HostName": "ec2-11-22-333-44.compute-1.amazonaws.com",
                                "ReplaceKeyPrefixWith": "report-404/"
                            }
                        }
                    ]
                }
            },
            "DeletionPolicy": "Retain"
        }
    },
    "Outputs": {
        "WebsiteURL": {
            "Value": {
                "Fn::GetAtt": [
                    "S3Bucket",
                    "WebsiteURL"
                ]
            },
            "Description": "URL for website hosted on S3"
        },
        "S3BucketSecureURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "S3Bucket",
                                "DomainName"
                            ]
                        }
                    ]
                ]
            },
            "Description": "Name of S3 bucket to hold website content"
        }
    }
}
